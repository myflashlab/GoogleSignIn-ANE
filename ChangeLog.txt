GoogleSignIn Air Native Extension

*Sep 20, 2018 - V1.3.0*
* updated Android dependencies to V15.0.1 and replaced AndroidSupport with its sub dependencies. The ANE now depends on the following:
    * com.myflashlab.air.extensions.dependency.overrideAir
    * com.myflashlab.air.extensions.dependency.androidSupport.arch
    * com.myflashlab.air.extensions.dependency.androidSupport.core
    * com.myflashlab.air.extensions.dependency.androidSupport.v4
    * com.myflashlab.air.extensions.dependency.googlePlayServices.auth
    * com.myflashlab.air.extensions.dependency.googlePlayServices.base
    * com.myflashlab.air.extensions.dependency.googlePlayServices.basement
    * com.myflashlab.air.extensions.dependency.googlePlayServices.tasks

*Apr 22, 2018 - V1.2.0*
* updated to [iOS SDK V4.1.2](https://developers.google.com/identity/sign-in/ios/sdk/google_signin_sdk_4_1_2.zip) to be synced with Firebase ANEs V6.5.0 which uses Firebase iOS SDK V4.11.0. make sure you are updating the frameworks to this version.
* updated to Android dependencies V12.0.1 make sure you are updating the dependency ANEs to this version
* add ```android:name="android.support.multidex.MultiDexApplication"``` to the manifest main application tag to work correctly on older Android versions.

*Mar 22, 2018 - V1.1.3*
* Optimized for GoogleGamesServices V4.0.0+

*Feb 15, 2018 - V1.1.1*
* Added ```GSignIn.rest.tokenInfo``` and ```GSignIn.rest.refreshAccessToken``` to let you manage tokens easier. For more information on how to use them, read the [asdoc](http://myflashlab.github.io/asdoc/com/myflashlab/air/extensions/gSignIn/GRest.html) and sample [.as codes](https://github.com/myflashlab/GoogleSignIn-ANE/blob/master/AIR/src/Main.as).
* Added [gamesSignIn](http://myflashlab.github.io/asdoc/com/myflashlab/air/extensions/gSignIn/GSignInOptions.html#gamesSignIn) setter to the ```GSignInOptions``` class. Useful when you are using the [Games Services ANE](https://github.com/myflashlab/GameServices-ANE).

*Feb 12, 2018 - V1.1.0*
* Added ```GRest``` and ```GRestTokens``` classes which can be used for accesing refresh_token and access_token with the help of ```GSignIn.rest.getTokens``` method. Checkou the [Main.as](https://github.com/myflashlab/GoogleSignIn-ANE/blob/master/AIR/src/Main.as) file for usage sample.

*Jan 30, 2018 - V1.0.0*
* beginning of the journey!